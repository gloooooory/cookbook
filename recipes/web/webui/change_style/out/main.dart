// Auto-generated from main.html.
// DO NOT EDIT.

library main_html;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'package:web_ui/web_ui.dart';


// Original code


final __changes = new __observe.Observable();

String __$fontSizeClass = 'normal';
String get fontSizeClass {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'fontSizeClass');
  }
  return __$fontSizeClass;
}
set fontSizeClass(String value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'fontSizeClass',
        __$fontSizeClass, value);
  }
  __$fontSizeClass = value;
}

void main() {}

// Additional generated code
void init_autogenerated() {
  var _root = autogenerated.document.body;
  var __e0, __e1, __e2, __e3;
  var __t = new autogenerated.Template(_root);
  __e0 = _root.query('#__e-0');
  __t.listen(__e0.onChange, ($event) { fontSizeClass = 'small'; });
  __t.oneWayBind(() => fontSizeClass == 'small', (e) { __e0.checked = e; }, false, false);
  __e1 = _root.query('#__e-1');
  __t.listen(__e1.onChange, ($event) { fontSizeClass = 'normal'; });
  __t.oneWayBind(() => fontSizeClass == 'normal', (e) { __e1.checked = e; }, false, false);
  __e2 = _root.query('#__e-2');
  __t.listen(__e2.onChange, ($event) { fontSizeClass = 'large'; });
  __t.oneWayBind(() => fontSizeClass == 'large', (e) { __e2.checked = e; }, false, false);
  __e3 = _root.query('#__e-3');
  __t.bindClass(__e3, () => fontSizeClass, false);
  __t.create();
  __t.insert();
}

//@ sourceMappingURL=main.dart.map