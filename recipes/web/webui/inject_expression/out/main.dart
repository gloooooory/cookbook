// Auto-generated from main.html.
// DO NOT EDIT.

library main_html;

import 'dart:html' as autogenerated;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;
import 'package:web_ui/observe/observable.dart' as __observe;
import 'package:web_ui/web_ui.dart';
import 'dart:async';


// Original code


final __changes = new __observe.Observable();

dynamic __$x = 32;
dynamic get x {
  if (__observe.observeReads) {
    __observe.notifyRead(__changes, __observe.ChangeRecord.FIELD, 'x');
  }
  return __$x;
}
set x(dynamic value) {
  if (__observe.hasObservers(__changes)) {
    __observe.notifyChange(__changes, __observe.ChangeRecord.FIELD, 'x',
        __$x, value);
  }
  __$x = value;
}
var y = 3;

num div(x, y) => x / y;
num intDiv(x, y) => x ~/ y;

void main() {
  
  new Timer.periodic(new Duration(seconds: 1), (_) {
    x += 1;
  });
}


// Additional generated code
void init_autogenerated() {
  var _root = autogenerated.document.body;
  final __html0 = new autogenerated.Element.html('<ul>\n        <li id="__e-10"></li>\n        <li id="__e-12"></li>\n        <li id="__e-14"></li>\n      </ul>');
  var __e1, __e10, __e12, __e14, __e15, __e16, __e3, __e5, __e7;
  var __t = new autogenerated.Template(_root);
  __e1 = _root.query('#__e-1');
  var __binding0 = __t.contentBind(() =>  x , false);
  __e1.nodes.addAll([new autogenerated.Text('x = '),
      __binding0]);
  __e3 = _root.query('#__e-3');
  var __binding2 = __t.contentBind(() =>  y , false);
  __e3.nodes.addAll([new autogenerated.Text('y = '),
      __binding2]);
  __e5 = _root.query('#__e-5');
  var __binding4 = __t.contentBind(() =>  intDiv(x,y) , false);
  __e5.nodes.addAll([new autogenerated.Text('x ~/ y = '),
      __binding4]);
  __e7 = _root.query('#__e-7');
  var __binding6 = __t.contentBind(() =>  div(x,y) , false);
  __e7.nodes.addAll([new autogenerated.Text('x / y = '),
      __binding6]);
  __e16 = _root.query('#__e-16');
  var __binding8 = __t.contentBind(() =>  x , false);
  __e15 = __html0.clone(true);
  __e10 = __e15.query('#__e-10');
  var __binding9 = __t.contentBind(() =>  x.toRadixString(2) , false);
  __e10.nodes.addAll([new autogenerated.Text('In binary: '),
      __binding9]);
  __e12 = __e15.query('#__e-12');
  var __binding11 = __t.contentBind(() =>  x.toRadixString(8) , false);
  __e12.nodes.addAll([new autogenerated.Text('In octal: '),
      __binding11]);
  __e14 = __e15.query('#__e-14');
  var __binding13 = __t.contentBind(() =>  x.toRadixString(16) , false);
  __e14.nodes.addAll([new autogenerated.Text('In hexadecimal: '),
      __binding13]);
  __e16.nodes.addAll([new autogenerated.Text('\n      You can write the number '),
      __binding8,
      new autogenerated.Text(' in a bunch of ways:\n      '),
      __e15,
      new autogenerated.Text('\n    ')]);
  __t.create();
  __t.insert();
}

//@ sourceMappingURL=main.dart.map