// Auto-generated from main.html.
// DO NOT EDIT.

library main_html;

import 'dart:html' as autogenerated_html;
import 'dart:web_audio' as autogenerated_audio;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;


// Original code
String tweet = '';
    
main() {} // main() is required, even if the body is empty


// Additional generated code
/** Create the views and bind them to models. */
void init_autogenerated() {
  var _root = autogenerated_html.document.body;
  autogenerated_html.InputElement __e0;
  
  autogenerated_html.EventListener __listener__e0_input_1;
  
  List<autogenerated.WatcherDisposer> __stoppers2;
  
  autogenerated_html.SpanElement __e2;
  
  var __binding1;
  
  autogenerated_html.DivElement __e4;
  
  var __binding3;
  


  // Initialize fields.
  __e0 = _root.query('#__e-0');
  __stoppers2 = [];
  __e2 = _root.query('#__e-2');
  __binding1 = new autogenerated_html.Text('');
  __e2.nodes.add(__binding1);
  __e4 = _root.query('#__e-4');
  __binding3 = new autogenerated_html.Text('');
  __e4.nodes.add(new autogenerated_html.Text(' You have '));
  __e4.nodes.add(__binding3);
  __e4.nodes.add(new autogenerated_html.Text(' characters remaining'));
  

  // Attach model to views.
  __listener__e0_input_1 = ($event) {
    tweet = __e0.value;
    autogenerated.dispatch();
  };
  __e0.on.input.add(__listener__e0_input_1);
  
  __stoppers2.add(autogenerated.watchAndInvoke(() => tweet, (__e) { __e0.value = __e.newValue; }));
  
  __stoppers2.add(autogenerated.watchAndInvoke(() => '${tweet.toUpperCase()}', (__e) {
    __binding1 = autogenerated.updateBinding(tweet.toUpperCase(), __binding1, __e.newValue);
  }));
  
  __stoppers2.add(autogenerated.watchAndInvoke(() => '${140 - tweet.length}', (__e) {
    __binding3 = autogenerated.updateBinding(140 - tweet.length, __binding3, __e.newValue);
  }));
  

}
